'''
******* 문제 푼 후 느낀 것 *********
DP 는 점화식을 구하는 것이 매우 중요하다.
문제를 딱 보았을때는 dfs 로 풀이가 가능할 것 처럼 보이나, 그 크기가 매우 커 시간초과 또는 메모리초과가 발생하는 것을 알 수 있다.

이를 잘 고려하여 dp 로 할지, dfs 로 풀지 정해야할 것이다.
'''

'''
2022/08/1
boj.kr/2293
동전 1

문제 :
n가지 종류의 동전이 있다. 각각의 동전이 나타내는 가치는 다르다. 이 동전을 적당히 사용해서, 그 가치의 합이 k원이 되도록 하고 싶다. 
그 경우의 수를 구하시오. 각각의 동전은 몇 개라도 사용할 수 있다.

사용한 동전의 구성이 같은데, 순서만 다른 것은 같은 경우이다.

입력 :
첫째 줄에 n, k가 주어진다. (1 ≤ n ≤ 100, 1 ≤ k ≤ 10,000) 다음 n개의 줄에는 각각의 동전의 가치가 주어진다. 동전의 가치는 100,000보다 작거나 같은 자연수이다.

결과 :
첫째 줄에 경우의 수를 출력한다. 경우의 수는 231보다 작다.
'''
import sys
input = sys.stdin.readline

n, k = map(int, input().split())

coin_list = []

for _ in range(n):
    coin_list.append(int(input()))

dp = [1] + [0 for _ in range(k)]


for coin in coin_list:
    for i in range(coin, k+1):
        dp[i] += dp[i-coin]

print(dp[k])
